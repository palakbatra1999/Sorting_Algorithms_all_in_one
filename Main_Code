#include <iostream>
using namespace std;

void selection_sort(int arr[],int n)
{
    int i,j;
    
    for(i=0;i<n-1;i++)
    {  int mini=i;
        for(j=i+1;j<n;j++)
        {
            if(arr[j]<arr[i])
           mini=j;
        }
        swap(arr[mini],arr[i]);
    }
    
    for(i=0;i<n;i++)
  cout<<arr[i]<<" ";
}

void bubble_sort(int arr[],int n)
{
    int i,j,flag=0;
    for(i=1;i<n;i++)
    {  flag=0;
        for(j=0;j<n-i;j++)
        {
            if(arr[j+1]<arr[j])
          {  swap(arr[j+1],arr[j]);
              flag=1;
          }
        }
        if(flag==0)
        break;
    }
    
     for(i=0;i<n;i++)
      cout<<arr[i]<<" ";
}
void merge(int *arr,int s,int e)
{
    int temp[100];
    int mid=(s+e)/2;
    int i=s,j=mid+1,k=s;
    
    while(i<=mid&&j<=e)
    {
       if(arr[i]<arr[j]) 
       temp[k++]=arr[i++];
       else temp[k++]=arr[j++];
    }
    
    while(i<=mid)
 { temp[k++]=arr[i++];}
  
  while(j<=e)
 { temp[k++]=arr[j++];}
  
  for(int i=s;i<=e;i++)
  arr[i]=temp[i];
  
  
}
void merge_Sort(int arr[],int s,int e)
{
   if(s>=e)
   return;
   
   int mid=(s+e)/2;
   merge_Sort(arr,s,mid);
   merge_Sort(arr,mid+1,e);
   
   merge(arr,s,e);
 
}
void insertion_sort(int *arr,int n)
{
    int i,j;
    
    for(i=1;i<n;i++)
    {  j=i-1;
    int key=arr[i];
        while(j>=0&&arr[j]>key)
        {
           arr[j+1]=arr[j];
           j--;
        }
        arr[j+1]=key;
    }
}
int quick(int *arr,int low,int high)
{
    int pivot=arr[high];
    int i=low-1;
    int j=low;
    
 for(int j=low;j<=high-1;j++){
     if(pivot>arr[j])
    {
        i++;
        swap(arr[i],arr[j]);
    }
     
 }
 swap(arr[i+1],arr[high]);
 return i+1;
    
}
void quick_sort(int *arr,int low,int high)
{
     
     if(low>=high)
     return;
     
     int pivot=quick(arr,low,high);
     
     quick_sort(arr,low,pivot-1);
     quick_sort(arr,pivot+1,high);
}
int main() {
int n;
cin>>n;
int i ,arr[n];
for(i=0;i<n;i++)
cin>>arr[i];

//selection_sort(arr,n);
//bubble_sort(arr,n);

//merge_Sort(arr,0,n-1);
//insertion_sort(arr,n);
//quick_sort(arr,0,n-1);
  for(i=0;i<n;i++)
      cout<<arr[i]<<" ";


	return 0;
}
